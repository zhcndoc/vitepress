import{D as e,b as t,l as n,o as r}from"./chunks/plugin-vue_export-helper.CIjrRlTa.js";const i=JSON.parse(`{"title":"مدیریت منابع","description":"","frontmatter":{},"headers":[],"relativePath":"fa/guide/asset-handling.md","filePath":"fa/guide/asset-handling.md","lastUpdated":1739638217000}`),a={name:`fa/guide/asset-handling.md`};function o(t,i,a,o,s,c){return e(),n(`div`,null,i[0]||=[r(`<h1 id="asset-handling" tabindex="-1">مدیریت منابع <a class="header-anchor" href="#asset-handling" aria-label="Permalink to “مدیریت منابع”">​</a></h1><h2 id="referencing-static-assets" tabindex="-1">ارجاع به منابع ایستا <a class="header-anchor" href="#referencing-static-assets" aria-label="Permalink to “ارجاع به منابع ایستا”">​</a></h2><p>تمام فایل‌های Markdown به کامپوننت‌های Vue تبدیل و توسط <a href="https://vitejs.dev/guide/assets.html" target="_blank" rel="noreferrer">Vite</a> پردازش می‌شوند. شما می‌توانید، <strong>و باید</strong>، هر نوع دارایی را با استفاده از URL‌های نسبی مرجع قرار دهید:</p><div class="language-md"><button title="Copy code" class="copy"></button><span class="lang">md</span><pre class="shiki shiki-themes github-light github-dark" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">![</span><span style="--shiki-light:#032F62;--shiki-light-text-decoration:underline;--shiki-dark:#DBEDFF;--shiki-dark-text-decoration:underline;">تصویر</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">](</span><span style="--shiki-light:#24292E;--shiki-light-text-decoration:underline;--shiki-dark:#E1E4E8;--shiki-dark-text-decoration:underline;">./image.png</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>شما می‌توانید منابع ایستا را در فایل‌های Markdown خود، کامپوننت‌های <code>*.vue</code> در قالب، استایل‌ها و فایل‌های <code>.css</code> ساده، با استفاده از مسیرهای عمومی مطلق (براساس ریشه پروژه) یا مسیرهای نسبی (براساس سیستم فایل شما) ارجاع دهید. روش دوم مشابه رفتاری است که در صورت استفاده از Vite، Vue CLI یا <code>file-loader</code> webpack با آن آشنا هستید.</p><p>انواع شایع تصویر، رسانه و فایل فونت به طور خودکار شناسایی و به عنوان منابع درج می‌شوند.</p><div class="tip custom-block"><p class="custom-block-title">فایل‌های لینک شده به عنوان دارایی محسوب نمی‌شوند</p><p>PDFها یا سند‌های دیگر که از طریق پیوندها در فایل‌های Markdown ارجاع داده شده‌اند به طور خودکار به عنوان دارایی در نظر گرفته نمی‌شوند. برای دسترسی به فایل‌های لینک شده، باید آن‌ها را به صورت دستی در دایرکتوری <a href="#the-public-directory"><code>public</code></a> پروژه قرار دهید.</p></div><p>تمام منابع ارجاع داده شده، شامل آن‌هایی که از مسیرهای مطلق استفاده می‌کنند، در مرحله تولید به دایرکتوری خروجی با نام فایلی بر اساس یک هش کپی خواهند شد. دارایی‌هایی که هرگز ارجاع نداده شوند، کپی نخواهند شد. منابع تصویر کوچک‌تر از 4 کیلوبایت به صورت base64 درون خطی می‌شوند - این می‌تواند از طریق گزینه پیکربندی <a href="./../reference/site-config#vite"><code>vite</code></a> تنظیم شود.</p><p>تمام ارجاع‌های مسیر <strong>ایستا</strong>، شامل مسیرهای مطلق، باید بر اساس ساختار دایرکتوری کاری شما تعیین شوند.</p><h2 id="the-public-directory" tabindex="-1">دایرکتوری عمومی <a class="header-anchor" href="#the-public-directory" aria-label="Permalink to “دایرکتوری عمومی”">​</a></h2><p>گاهی اوقات ممکن است نیاز داشته باشید منابع ایستا را فراهم کنید که به صورت مستقیم در هیچ‌یک از Markdown یا کامپوننت‌های قالب شما ارجاع نشده‌اند، یا ممکن است بخواهید برخی فایل‌ها را با نام اصلی خود سرویس دهید. به عنوان مثال، فایل‌هایی مانند <code>robots.txt</code>، آیکون‌های fav، و آیکون‌های PWA.</p><p>شما می‌توانید این فایل‌ها را در دایرکتوری <code>public</code> تحت <a href="./routing#source-directory">دایرکتوری منبع</a> قرار دهید. به عنوان مثال، اگر ریشه پروژه شما <code>./docs</code> است و از محل پیش‌فرض دایرکتوری منبع استفاده می‌کنید، آنگاه دایرکتوری عمومی شما <code>./docs/public</code> خواهد بود.</p><p>منابع قرار داده شده در <code>public</code> به صورت اصلی در ریشه دایرکتوری خروجی کپی خواهند شد.</p><p>توجه داشته باشید که باید به فایل‌های قرار داده شده در <code>public</code> با استفاده از مسیر مطلق ریشه ارجاع دهید - به عنوان مثال، <code>public/icon.png</code> همیشه باید به عنوان <code>/icon.png</code> در کد منبع ارجاع داده شود.</p><h2 id="base-url" tabindex="-1">URL پایه <a class="header-anchor" href="#base-url" aria-label="Permalink to “URL پایه”">​</a></h2><p>اگر وب‌سایت شما به URL غیر ریشه استقرار می‌یابد، باید گزینه <code>base</code> را در <code>.vitepress/config.js</code> تنظیم کنید. به عنوان مثال، اگر قصد دارید وب‌سایت خود را به <code>https://foo.github.io/bar/</code> استقرار دهید، آنگاه <code>base</code> باید به <code>&#39;/bar/&#39;</code> تنظیم شود (همیشه باید با یک خط شروع و پایان یابد).</p><p>تمام مسیرهای دارایی ایستا شما به صورت خودکار پردازش می‌شوند تا با ارزش‌های <code>base</code> مختلف تطبیق یابند. به عنوان مثال، اگر به یک ارجاع مطلق به یک دارایی زیر <code>public</code> در Markdown خود اشاره کرده‌اید:</p><div class="language-md"><button title="Copy code" class="copy"></button><span class="lang">md</span><pre class="shiki shiki-themes github-light github-dark" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">![</span><span style="--shiki-light:#032F62;--shiki-light-text-decoration:underline;--shiki-dark:#DBEDFF;--shiki-dark-text-decoration:underline;">تصویر</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">](</span><span style="--shiki-light:#24292E;--shiki-light-text-decoration:underline;--shiki-dark:#E1E4E8;--shiki-dark-text-decoration:underline;">/image-inside-public.png</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>در این حالت، شما <strong>نیازی ندارید</strong> که آن را به روز کنید وقتی که مقدار پیکربندی <code>base</code> را تغییر می‌دهید.</p><p>اما، اگر شما در حال نویسندگی یک کامپوننت قالب هستید که به صورت پویا به منابع لینک می‌دهد، به عنوان مثال یک تصویر که <code>src</code> آن براساس مقدار پیکربندی قالب است:</p><div class="language-vue"><button title="Copy code" class="copy"></button><span class="lang">vue</span><pre class="shiki shiki-themes github-light github-dark" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">img</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> :</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">src</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">theme.logoPath</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> /&gt;</span></span></code></pre></div><p>در این حالت، توصیه می‌شود که مسیر را با استفاده از کمکی <a href="./../reference/runtime-api#withbase"><code>withBase</code></a> ارائه شده توسط ویت‌پرس بپوشانید:</p><div class="language-vue"><button title="Copy code" class="copy"></button><span class="lang">vue</span><pre class="shiki shiki-themes github-light github-dark" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">script</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> setup</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> { withBase, useData } </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">from</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;vitepress&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> { </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">theme</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> } </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> useData</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">()</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">script</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">template</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">img</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> :src</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;withBase(theme.logoPath)&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> /&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">template</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span></code></pre></div>`,23)])}var s=t(a,[[`render`,o]]);export{i as __pageData,s as default};